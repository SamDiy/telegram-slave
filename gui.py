#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Nov 19, 2019 07:49:28 PM EET  platform: Linux

import sys
# from bot import bot
# from threading import Thread

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    gui_support.set_Tk_var()
    top = Toplevel1 (root)
    gui_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    gui_support.set_Tk_var()
    top = Toplevel1 (w)
    gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("561x280+737+382")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(0, 0)
        top.title("New Toplevel")
        top.configure(highlightcolor="black")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=1.0)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")

        self.Start = tk.Button(self.Frame1)
        self.Start.place(relx=0.036, rely=0.036, height=29, width=65)
        self.Start.configure(activebackground="#ededed")
        self.Start.configure(command=gui_support.onStartClick)
        self.Start.configure(text='''Старт''')

        self.Button2 = tk.Button(self.Frame1)
        self.Button2.place(relx=0.873, rely=0.036, height=29, width=58)
        self.Button2.configure(activebackground="#f9f9f9")
        self.Button2.configure(command=gui_support.onStopClick)
        self.Button2.configure(text='''Стоп''')

        self.api_key_label = tk.Label(self.Frame1)
        self.api_key_label.place(relx=0.036, rely=0.393, height=19, width=151)
        self.api_key_label.configure(activebackground="#f9f9f9")
        self.api_key_label.configure(text='''Ключ API''')

        self.admin_label = tk.Label(self.Frame1)
        self.admin_label.place(relx=0.036, rely=0.5, height=19, width=147)
        self.admin_label.configure(activebackground="#f9f9f9")
        self.admin_label.configure(text='''Id Администратора''')

        self.DialogflowApi_label = tk.Label(self.Frame1)
        self.DialogflowApi_label.place(relx=0.036, rely=0.607, height=19
                , width=148)
        self.DialogflowApi_label.configure(activebackground="#f9f9f9")
        self.DialogflowApi_label.configure(text='''Dialogflow API''')

        self.sessionId_label = tk.Label(self.Frame1)
        self.sessionId_label.place(relx=0.036, rely=0.714, height=19, width=155)
        self.sessionId_label.configure(activebackground="#f9f9f9")
        self.sessionId_label.configure(text='''ID сессии''')

        self.language_label = tk.Label(self.Frame1)
        self.language_label.place(relx=0.036, rely=0.821, height=19, width=150)
        self.language_label.configure(activebackground="#f9f9f9")
        self.language_label.configure(text='''Код языка бота''')

        self.api_key = tk.Entry(self.Frame1)
        self.api_key.place(relx=0.321, rely=0.393,height=21, relwidth=0.652)
        self.api_key.configure(background="white")
        self.api_key.configure(font="-family {DejaVu Sans Mono} -size 9")
        self.api_key.configure(selectbackground="#c4c4c4")
        self.api_key.configure(textvariable=gui_support.api_key)
        self.api_key.bind('<Return>', gui_support.onEndEnter)

        self.admin = tk.Entry(self.Frame1)
        self.admin.place(relx=0.321, rely=0.5,height=21, relwidth=0.652)
        self.admin.configure(background="white")
        self.admin.configure(font="-family {DejaVu Sans Mono} -size 9")
        self.admin.configure(selectbackground="#c4c4c4")
        self.admin.configure(textvariable=gui_support.admin)
        self.admin.bind('<Return>', gui_support.onEndEnter)

        self.DialogflowApi = tk.Entry(self.Frame1)
        self.DialogflowApi.place(relx=0.321, rely=0.607, height=21
                , relwidth=0.652)
        self.DialogflowApi.configure(background="white")
        self.DialogflowApi.configure(font="-family {DejaVu Sans Mono} -size 9")
        self.DialogflowApi.configure(selectbackground="#c4c4c4")
        self.DialogflowApi.configure(textvariable=gui_support.DialogflowApi)
        self.DialogflowApi.bind('<Return>', gui_support.onEndEnter)

        self.sessionId = tk.Entry(self.Frame1)
        self.sessionId.place(relx=0.321, rely=0.714,height=21, relwidth=0.652)
        self.sessionId.configure(background="white")
        self.sessionId.configure(font="-family {DejaVu Sans Mono} -size 9")
        self.sessionId.configure(selectbackground="#c4c4c4")
        self.sessionId.configure(textvariable=gui_support.sessionId)
        self.sessionId.bind('<Return>', gui_support.onEndEnter)

        self.language = tk.Entry(self.Frame1)
        self.language.place(relx=0.321, rely=0.821,height=21, relwidth=0.652)
        self.language.configure(background="white")
        self.language.configure(font="-family {DejaVu Sans Mono} -size 9")
        self.language.configure(selectbackground="#c4c4c4")
        self.language.configure(textvariable=gui_support.language)
        self.language.bind('<Return>', gui_support.onEndEnter)

if __name__ == '__main__':
    vp_start_gui()
